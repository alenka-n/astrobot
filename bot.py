import logging
from datetime import datetime
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ –º–æ–¥—É–ª–∏
from config import BOT_TOKEN, ZODIAC_EMOJIS
from database import init_database, get_zodiac_sign, save_user_data, get_user_data
from horoscope_parser import horoscope_parser

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    
    welcome_text = f"""
–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã –Ø —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞—Å—Ç—Ä–æ–±–æ—Ç! üåü

–Ø –º–æ–≥—É:
üìÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–≤–æ—é –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è
‚ôà –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞  
üîÆ –ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è

–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã:
/setbirth - –£–∫–∞–∑–∞—Ç—å –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è
/myhoroscope - –ü–æ–ª—É—á–∏—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
/mysign - –£–∑–Ω–∞—Ç—å —Å–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞
/update - –û–±–Ω–æ–≤–∏—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø (–µ—Å–ª–∏ —É—Å—Ç–∞—Ä–µ–ª)
    """
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–æ–º–∞–Ω–¥–∞–º–∏
    keyboard = [
        ['/setbirth', '/myhoroscope'],
        ['/mysign', '/update']
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    
    await update.message.reply_text(welcome_text, reply_markup=reply_markup)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è
async def set_birth_date(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üìÖ –í–≤–µ–¥–∏ —Å–≤–æ—é –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: 15.09.1990"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è
async def handle_birth_date(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    text = update.message.text
    
    try:
        # –ü–∞—Ä—Å–∏–º –¥–∞—Ç—É
        day, month, year = map(int, text.split('.'))
        birth_date = f"{day:02d}.{month:02d}.{year}"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –¥–∞—Ç—ã
        datetime.strptime(birth_date, '%d.%m.%Y')
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞
        zodiac_sign = get_zodiac_sign(day, month)
        emoji = ZODIAC_EMOJIS.get(zodiac_sign, '‚ú®')
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        save_user_data(user.id, user.username, birth_date, zodiac_sign)
        
        response = (
            f"‚úÖ –û—Ç–ª–∏—á–Ω–æ! –Ø —Å–æ—Ö—Ä–∞–Ω–∏–ª —Ç–≤–æ—é –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è: {birth_date}\n\n"
            f"{emoji} –¢–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: {zodiac_sign.capitalize()} {emoji}\n\n"
            f"–¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–π /myhoroscope —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è!"
        )
        
    except ValueError:
        response = "‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì\n–ù–∞–ø—Ä–∏–º–µ—Ä: 15.09.1990"
    except Exception as e:
        response = "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!"
        logging.error(f"Error saving birth date: {e}")
    
    await update.message.reply_text(response)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞
async def get_my_sign(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    
    user_data = get_user_data(user.id)
    
    if user_data:
        zodiac_sign = user_data['zodiac_sign']
        birth_date = user_data['birth_date']
        emoji = ZODIAC_EMOJIS.get(zodiac_sign, '‚ú®')
        
        response = (
            f"{emoji} –¢–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: {zodiac_sign.capitalize()} {emoji}\n"
            f"üìÖ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {birth_date}\n\n"
            f"–•–æ—á–µ—à—å –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è? –ò—Å–ø–æ–ª—å–∑—É–π /myhoroscope"
        )
    else:
        response = (
            "‚ùå –Ø –µ—â–µ –Ω–µ –∑–Ω–∞—é —Ç–≤–æ—é –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è.\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π /setbirth —á—Ç–æ–±—ã —É–∫–∞–∑–∞—Ç—å –µ–µ!"
        )
    
    await update.message.reply_text(response)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞
async def get_my_horoscope(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å "–ø–µ—á–∞—Ç–∞–µ—Ç"
    await update.message.reply_chat_action(action='typing')
    
    user_data = get_user_data(user.id)
    
    if user_data:
        zodiac_sign = user_data['zodiac_sign']
        emoji = ZODIAC_EMOJIS.get(zodiac_sign, '‚ú®')
        
        # –ü–æ–ª—É—á–∞–µ–º –≥–æ—Ä–æ—Å–∫–æ–ø –∏–∑ –ø–∞—Ä—Å–µ—Ä–∞
        horoscope = await horoscope_parser.get_daily_horoscope(zodiac_sign)
        
        response = (
            f"üîÆ –ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –¥–ª—è {zodiac_sign.capitalize()} {emoji}\n\n"
            f"{horoscope}\n\n"
            f"üí´ –ê–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞: {datetime.now().strftime('%d.%m.%Y %H:%M')}"
        )
    else:
        response = (
            "‚ùå –Ø –µ—â–µ –Ω–µ –∑–Ω–∞—é —Ç–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞.\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π /setbirth —á—Ç–æ–±—ã —É–∫–∞–∑–∞—Ç—å –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è!"
        )
    
    await update.message.reply_text(response)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞
async def update_horoscope(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    
    user_data = get_user_data(user.id)
    
    if user_data:
        zodiac_sign = user_data['zodiac_sign']
        
        # –û—á–∏—â–∞–µ–º –∫—ç—à –¥–ª—è —ç—Ç–æ–≥–æ –∑–Ω–∞–∫–∞
        horoscope_parser.clear_cache(zodiac_sign)
        
        await update.message.reply_text("üîÑ –û–±–Ω–æ–≤–ª—è—é –≥–æ—Ä–æ—Å–∫–æ–ø...")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–≤–µ–∂–∏–π –≥–æ—Ä–æ—Å–∫–æ–ø
        await get_my_horoscope(update, context)
    else:
        await update.message.reply_text("–°–Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ /setbirth")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
async def handle_unknown(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "‚ùå –ù–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π /start —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥."
    )

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    init_database()
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ—Ç–∞
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("setbirth", set_birth_date))
    application.add_handler(CommandHandler("mysign", get_my_sign))
    application.add_handler(CommandHandler("myhoroscope", get_my_horoscope))
    application.add_handler(CommandHandler("update", update_horoscope))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è
    application.add_handler(MessageHandler(
        filters.TEXT & filters.Regex(r'^\d{2}\.\d{2}\.\d{4}$'), 
        handle_birth_date
    ))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_unknown))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("ü§ñ –ê—Å—Ç—Ä–æ–±–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    application.run_polling()

if __name__ == '__main__':
    main()